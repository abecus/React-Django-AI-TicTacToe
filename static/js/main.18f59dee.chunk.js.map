{"version":3,"sources":["layouts/Square.js","layouts/Board.js","App.js","reportWebVitals.js","index.js"],"names":["square","props","className","onClick","value","Board","state","squares","Array","fill","X_turn","winner","started","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","csrf_token","this","getCookie","fetch","method","headers","body","JSON","stringify","Squares","Turn","response","json","data","console","log","move","setState","getNextMove","then","processData","catch","error","handleClick","status","style","renderSquare","handleClickForAI","handleReset","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18f59dee.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function square(props) {\r\n    return (\r\n        <button className='square' onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nexport default class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n      X_turn: true,\r\n      winner: null,\r\n      started: false,\r\n    };\r\n  }\r\n\r\n  getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== \"\") {\r\n      var cookies = document.cookie.split(\";\");\r\n      for (var i = 0; i < cookies.length; i++) {\r\n        var cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  }\r\n\r\n  async getNextMove() {\r\n    const csrf_token = this.getCookie(\"csrftoken\");\r\n    const url = \"https://tictactoe-drf-backend.herokuapp.com/api/solve/\";\r\n    // const url = \"http://127.0.0.1:8000/api/solve/\";\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"X-CSRFToken\": csrf_token,\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        Squares: this.state.squares,\r\n        Turn: this.state.X_turn ? \"X\" : \"O\",\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    console.log(data);\r\n    return data;\r\n  }\r\n\r\n  processData(data) {\r\n    const winner = data.winner;\r\n    const move = data.move;\r\n\r\n    const squares = this.state.squares;\r\n    squares[move] = this.state.X_turn ? \"X\" : \"O\";\r\n    this.setState({\r\n      winner: winner,\r\n      squares: squares,\r\n      X_turn: !this.state.X_turn,\r\n      started: true,\r\n    });\r\n  }\r\n\r\n  handleClick(i) {\r\n    if (this.state.winner || this.state.squares[i]) {\r\n      return;\r\n    }\r\n    const squares = this.state.squares;\r\n    squares[i] = this.state.X_turn ? \"X\" : \"O\";\r\n    this.setState(\r\n      {\r\n        squares: squares,\r\n        X_turn: !this.state.X_turn,\r\n        started: true,\r\n      },\r\n      () => {\r\n        this.getNextMove()\r\n          .then((data) => this.processData(data))\r\n          .catch((error) => {\r\n            console.log(\"Error\", error);\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.state.squares[i]}\r\n        onClick={() => this.handleClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  handleClickForAI() {\r\n    this.getNextMove()\r\n      .then((data) => this.processData(data))\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n      });\r\n  }\r\n\r\n  handleReset() {\r\n    this.setState({\r\n      squares: Array(9).fill(null),\r\n      X_turn: true,\r\n      winner: null,\r\n      started: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const status =\r\n      this.state.winner === null\r\n        ? `Next player: ${this.state.X_turn ? \"X\" : \"O\"}`\r\n        : this.state.winner === \"Tie\"\r\n        ? \"Its a Tie\"\r\n        : `Winner: ${this.state.winner}`;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"status\" style={{}}>\r\n          {status}\r\n        </div>\r\n\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n\r\n        <div className=\"btns\">\r\n          {!this.state.started && (\r\n            <button className=\"btn\" onClick={() => this.handleClickForAI()}>\r\n              AI First\r\n            </button>\r\n          )}\r\n          <button className=\"btn\" onClick={() => this.handleReset()}>\r\n            {\" \"}\r\n            Reset{\" \"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n{\r\n  /* <div className=\"board\">\r\n          <div className=\"board-row1\">\r\n            <div className=\"board-col1\">{this.renderSquare(0)}</div>\r\n            <div className=\"board-col2\">{this.renderSquare(1)}</div>\r\n            <div className=\"board-col3\">{this.renderSquare(2)}</div>\r\n          </div>\r\n          <div className=\"board-row2\">\r\n            <div className=\"board-col1\">{this.renderSquare(3)}</div>\r\n            <div className=\"board-col2\">{this.renderSquare(4)}</div>\r\n            <div className=\"board-col3\">{this.renderSquare(5)}</div>\r\n          </div>\r\n          <div className=\"board-row3\">\r\n            <div className=\"board-col1\">{this.renderSquare(6)}</div>\r\n            <div className=\"board-col2\">{this.renderSquare(7)}</div>\r\n            <div className=\"board-col3\">{this.renderSquare(8)}</div>\r\n          </div>\r\n        </div> */\r\n}\r\n","import './App.css';\nimport Board from \"./layouts/Board\";\n\n\nfunction App() {\n  return (\n    <div className=\"game\">\n      <div className=\"board\">\n        <Board />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}